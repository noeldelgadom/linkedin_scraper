continue
browser_two.span(class: 'company-industries').inner_text
browser_two.url
exit
browser_one.h3(class: 'jobs-details-top-card__company-info').inner_text[12..-1]
browser_one.h3(class: 'jobs-details-top-card__company-info').inner_text[9..-1]
browser_one.h3(class: 'jobs-details-top-card__company-info').inner_text[5..-1]
browser_one.h3(class: 'jobs-details-top-card__company-info').inner_text[3..-1]
browser_one.h3(class: 'jobs-details-top-card__company-info').inner_text
browser_one.h3(class: 'jobs-details-top-card__company-info').span.next_sibling.inner_text
browser_one.h3(class: 'jobs-details-top-card__company-info').span.next_sibling.exists?
browser_one.h3(class: 'jobs-details-top-card__company-info').span[1].exists?
browser_one.h3(class: 'jobs-details-top-card__company-info').span.inner_text
exit
continue
exit
browser_one.ol(class: 'results-paginator').li.ol.li(class: 'active').next_sibling.click
browser_one.ol(class: 'results-paginator').li.ol.li(class: 'active').methods.sort
browser_one.ol(class: 'results-paginator').li.ol.li(class: 'active').click
browser_one.ol(class: 'results-paginator').li.ol.li(class: 'active').exists?
browser_one.ol(class: 'results-paginator').li.ol.li.exists?
browser_one.ol(class: 'results-paginator').li.ol.exists?
browser_one.ol(class: 'results-paginator').li.exists?
browser_one.ol(class: 'results-paginator').li.ol.li.(class: 'active').exists?
browser_one.ol(class: 'results-paginator').exists?
browser.ol(class: 'results-paginator').exists?
continue_scan
exit
continue
job[:company_url]
exit
browser_two.url
exit
response.values.include? [job[:contact_url]]
response.values.include? job[:contact_url]
response.values.contains? job[:contact_url]
job[:contact_url]
response.values
response.value
response
exit
response
continue
response.values
response
exit
job
continue
exit
continue
exit
browser.close
browswer.close
exit
browser_two = browser = Watir::Browser.new
exit
continue
exit
response.values
response
exit
google_array
continue
exit
google_array
exit
jobs_with_industries_and_emails[0].values
jobs_with_industries_and_emails.class.name
jobs_with_industries_and_emails.values.class.name
jobs_with_industries_and_emails.values
response.values
exit
response.values
response
exit
response.values
response
exit
response
continue
response
exit
response
continue
jobs_with_industries_and_emails
exit
jobs_with_industries_and_emails
exit
continue
browser.section(class: 'ci-email').exists?
browser.goto(job[:contact_url] + 'detail/contact-info/')
browser.span(class: 'company-industries').exists?
browser.goto(job[:company_url])
job
continue
browser.section(class: 'ci-email').exists?
browser.goto(job[:contact_url] + 'detail/contact-info/')
browser.span(class: 'company-industries').exists?
browser.goto(job[:company_url])
browser.span(class: 'company-industries').exists?
continue
exit
response.class.name
response.methods.sort
response.each_value {|x| puts x}
response.each_values {|x| puts x}
response.each {|x| puts x}
response.methods.sort
response
end
  puts "#{row[0]}, #{row[4]}"
  # Print columns A and E, which correspond to indices 0 and 4.
response.each do |row|
response
exit
parsed_page.children[7].children[3].children[7].children[1].children[1].children[1].children[1].children[1].children[1].children[1].children[5].children[1].children[13].children[7].children[1].children[1].children[1].children[1].children[1].children[5].children[1]
exit
parsed_page.children[7]
parsed_page.children[6]
parsed_page.children[5]
parsed_page.children[4]
parsed_page.children[3]
parsed_page.children[2]
parsed_page.children[1]
parsed_page.children[0]
parsed_page.children.count
parsed_page.children[1]
parsed_page.name
parsed_page
parsed_page.res
parsed_page.body
parsed_page.class.name
exit
parsed_page.class.name
parsed_page.css('body').class.name
parsed_page.css('body')
parsed_page.parse('Gerente de Compras')
parsed_page.parse('hi')
parsed_page.parse
parsed_page.class.name
continue
parsed_page.css('body').children[1].children[17].class.name
parsed_page.css('body').children[1].children[17]
exit
parsed_page.css('body').children[1].children[17]
parsed_page.css('body').children[1].children[17].children.count
parsed_page.css('body').children[1].children[17]
parsed_page.css('body')[1].children[17]
parsed_page.css('body').children[1].children[17]
parsed_page.css('body').children[1].children[18]
parsed_page.css('body').children[1].children[17]
parsed_page.css('body').children[1].children[16]
parsed_page.css('body').children[1].children[15]
parsed_page.css('body').children[1].children[14]
parsed_page.css('body').children[1].children[13]
parsed_page.css('body').children[1].children[12]
parsed_page.css('body').children[1].children[11]
parsed_page.css('body').children[1].children[10]
parsed_page.css('body').children[1].children[9]
parsed_page.css('body').children[1].children[8]
parsed_page.css('body').children[1].children[7]
parsed_page.css('body').children[1].children[6]
parsed_page.css('body').children[1].children[5]
parsed_page.css('body').children[1].children[4]
parsed_page.css('body').children[1].children[3]
parsed_page.css('body').children[1].children[2]
parsed_page.css('body').children[1].children[1]
parsed_page.css('body').children[1].children[0]
puts '----------'
parsed_page.css('body').children[1].children[3]
parsed_page.css('body').children[1].children.last
parsed_page.css('body').children[1].children.first
parsed_page.css('body').children[1].children.count
parsed_page.css('body').children[1]
parsed_page.css('body').children[2]
parsed_page.css('body').children[1]
parsed_page.css('body').children[0]
parsed_page.css('body').children.count
parsed_page.css('body').inspect
parsed_page.css('body').children.second
parsed_page.css('body').children.last
parsed_page.css('body').children.first
parsed_page.css('body').children
parsed_page.css('body').child
parsed_page.css('body').children[1]
parsed_page.css('body').children[4]
parsed_page.css('body').children[3]
parsed_page.css('body').children[2]
parsed_page.css('body').children[1]
parsed_page.css('body').children[0]
parsed_page.css('body').children[2]
parsed_page.css('body').children[4]
parsed_page.css('body').children[1]
parsed_page.css('body').children
parsed_page.css('body')
parsed_page.css('#content-outlet')
exit
parsed_page.css('body').class.name
parsed_page.class.name
exit
@parsed_page.css('#content-outlet')
exit
@parsed_page.css('body')
parsed_page.css('body').class.name
exit
parsed_page.css('body').class.name
parsed_page.css('#content-outlet').class.name
parsed_page.css('#content-outlet')
parsed_page.css('#layout-main')
parsed_page.css('body').class.name
parsed_page.css('body')
parsed_page.css('#layout-main')
parsed_page.css('#content-outlet')
exit
@parsed_page.css('ul')
@parsed_page.css('body')
exit
parsed_page.class.name
parsed_page.to_xml
parsed_page.class.name
parsed_page.to_xml
parsed_page.class.name
job_listings.class.name
job_listings = parsed_page.css('body')
exit
parsed_page.read.inspect
parsed_page.read.methods
parsed_page.read[0]
parsed_page.read
parsed_page.attribute('body')
parsed_page.attribute('div')
parsed_page.attribute('job-listings')
parsed_page.read
exit
@parsed_page.css('body')
@parsed_page.css('ul')
@parsed_page
exit
parsed_page.css('body')
parsed_page.css('ul')
parsed_page
exit
Nokogiri::HTML(unparsed_page).parse
parsed_page.parse
parsed_page.methods
parsed_page.class
parsed_page.classes
parsed_page.classes.name
parsed_page.class_type
parsed_page.class_name
exit
job_listings.body
job_listings
job_listings[0]
job_listings['ul']
job_listings['div']
